--- a/src/scenes/GameScene.ts
+++ b/src/scenes/GameScene.ts
@@ -1581,7 +1581,7 @@ export class GameScene extends Scene {
     
     // Oキーで妨害ブロック状態デバッグ
     this.input.keyboard?.on('keydown-O', () => {
-      this.debugObstacleBlockState();
+      this.debugIceBlocks();
     });
     
     console.log('🔧 [GAME SCENE] Debug shortcut setup:');
@@ -1984,34 +1984,15 @@ export class GameScene extends Scene {
   }
 
   /**
-   * 妨害ブロックの状態をデバッグ出力
+   * 氷結ブロックの状態をデバッグ出力
    */
-  private debugObstacleBlockState(): void {
-    console.log('=== 妨害ブロック状態デバッグ ===');
-    console.log(`現在のブロック数: ${this.currentBlocks.length}`);
-    
-    // 妨害ブロックの数をカウント
-    const obstacleBlocks = this.currentBlocks.filter(block => block.type !== 'normal');
-    console.log(`妨害ブロック数: ${obstacleBlocks.length}`);
-    
-    // 妨害ブロックの種類ごとにカウント
-    const blockTypeCount = obstacleBlocks.reduce((acc, block) => {
-      acc[block.type] = (acc[block.type] || 0) + 1;
-      return acc;
-    }, {} as Record<string, number>);
-    
-    console.log('妨害ブロックの種類別カウント:');
-    Object.entries(blockTypeCount).forEach(([type, count]) => {
-      console.log(`  - ${type}: ${count}個`);
-    });
-    
-    // 氷結ブロックの詳細情報
-    const iceBlocks = obstacleBlocks.filter(block => 
-      block.type === 'ice1' || 
-      block.type === 'ice2' || 
-      block.type === 'iceCounter' || 
-      block.type === 'iceCounterPlus'
-    );
+  private debugIceBlocks(): void {
+    // 外部ユーティリティを使用
+    import('../utils/debugIceBlockState').then(module => {
+      const { debugIceBlockState, printBoardState } = module;
+      debugIceBlockState(this.currentBlocks, this.obstacleBlockManager);
+      printBoardState(this.currentBlocks, this.BOARD_WIDTH, this.BOARD_HEIGHT);
+    }).catch(error => {
+      console.error('Failed to load debugIceBlockState:', error);
+    });
+  }
+}
